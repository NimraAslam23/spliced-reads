values_to = "anno count") |>
View()
View(ARHGAP32_clinical_jir)
ARHGAP32_clinical_jir |>
filter(cryptic_count > 2)
ARHGAP32_clinical_jir |>
filter(cryptic_count > 2) |> View()
View(STMN2_clinical_jir_cryptic)
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = gene,y = cryptic_jir)) +
geom_boxplot()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", ""))
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |> View()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |> View()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |> View()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = gene,y = cryptic_jir)) +
geom_boxplot()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
mutate(jir_ARHGAP32 = 1 - jir_ARHGAP32 , jir_SYNJ2 = 1 - jir_SYNJ2) |>
mutate(arh_ratio = log2(jir_ARHGAP32 / jir_SYNJ2)) |>
ggplot(aes(y = arh_ratio,x = 1)) +
geom_violin() +
geom_hline(yintercept = 0) +
ylab("Log2Fold Ratio of ARHGAP32 to SYNJ2 cryptic expression")
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
mutate(jir_ARHGAP32 = 1 - jir_ARHGAP32 , jir_SYNJ2 = 1 - jir_SYNJ2) |>
mutate(arh_ratio = log2(jir_ARHGAP32 / jir_SYNJ2))
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
mutate(jir_ARHGAP32 = 1 - jir_ARHGAP32 , jir_SYNJ2 = 1 - jir_SYNJ2) |>
mutate(arh_ratio = log2(jir_ARHGAP32 / jir_SYNJ2)) |> View()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id, jir_ARHGAP32, jir_SYNJ2, study_id, cancer_type, cancer_abbrev,
gdc_primary_site, disease_survival_months, mutation_count) |>
pivot_longer(cols = c(jir_ARHGAP32, jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = cancer_abbrev,
y = cryptic_jir,
fill = gene)) +
geom_bar()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id, jir_ARHGAP32, jir_SYNJ2, study_id, cancer_type, cancer_abbrev,
gdc_primary_site, disease_survival_months, mutation_count) |>
pivot_longer(cols = c(jir_ARHGAP32, jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = cancer_abbrev,
y = cryptic_jir,
fill = gene)) +
geom_bar(stat = "identiy")
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id, jir_ARHGAP32, jir_SYNJ2, study_id, cancer_type, cancer_abbrev,
gdc_primary_site, disease_survival_months, mutation_count) |>
pivot_longer(cols = c(jir_ARHGAP32, jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = cancer_abbrev,
y = cryptic_jir,
fill = gene)) +
geom_bar(stat = "identity")
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id, jir_ARHGAP32, jir_SYNJ2, study_id, cancer_type, cancer_abbrev,
gdc_primary_site, disease_survival_months, mutation_count) |>
pivot_longer(cols = c(jir_ARHGAP32, jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = cancer_abbrev,
y = cryptic_jir,
fill = gene)) +
geom_bar(stat = "identity", position = "dodge")
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id,gdc_primary_site,disease_survival_months,mutation_count,jir_ARHGAP32,jir_SYNJ2) |>
pivot_longer(cols = c(jir_ARHGAP32,jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = gene,y = cryptic_jir,group = case_submitter_id)) +
geom_point() +
geom_line()
common_ARHGAP32_SYNJ2 |>
select(case_submitter_id, jir_ARHGAP32, jir_SYNJ2, study_id, cancer_type, cancer_abbrev,
gdc_primary_site, disease_survival_months, mutation_count) |>
pivot_longer(cols = c(jir_ARHGAP32, jir_SYNJ2),
names_to = "gene",
values_to = "cryptic_jir") |>
mutate(gene = str_replace(gene, "jir_", "")) |>
mutate(cryptic_jir = 1 - cryptic_jir) |>
ggplot(aes(x = cancer_abbrev,
y = cryptic_jir,
fill = gene)) +
geom_bar(stat = "identity", position = "dodge")
ARHGAP32_clinical_jir_cryptic <- ARHGAP32_clinical_jir |>
filter(cryptic_count > 2)
ARHGAP32_cryptic_cBio <- ARHGAP32_clinical_jir_cryptic |>
left_join(cBio_clinical, by = "case_submitter_id") |>
select(-cgc_primary_site, -Cancer.Type, -Overall.Survival..Months.) |>
rename("disease_survival_months" = "Months.of.disease.specific.survival") |>
relocate(case_submitter_id, .after = Sample.ID) |>
relocate(cancer_type, .after = case_submitter_id) |>
relocate(gdc_primary_site, .after = cancer_abbrev) |>
relocate(sample_type, .after = gdc_primary_site) |>
janitor::clean_names()
ARHGAP32_cryptic_cBio <- ARHGAP32_cryptic_cBio |>
mutate_at("mutation_count", as.numeric)
intersect(STMN2_cryptic_cBio$case_submitter_id, ARHGAP32_cryptic_cBio$case_submitter_id) # none
intersect(STMN2_cryptic_cBio$case_submitter_id, ARHGAP32_cryptic_cBio$case_submitter_id) # none
intersect(STMN2_cryptic_cBio$case_submitter_id, SYNJ2_cryptic_cBio$case_submitter_id) # none
common_patients_STMN2_ARHGAP32 <- intersect(STMN2_cryptic_cBio$case_submitter_id, ARHGAP32_cryptic_cBio$case_submitter_id) # 5 cases
STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names() |>
View()
STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names()
View(STMN2_cryptic_cBio)
STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, stmn2_cryptic_coverage, stmn2_annotated_coverage, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names() |> View()
intersect(STMN2_cryptic_cBio$case_submitter_id, ARHGAP32_cryptic_cBio$case_submitter_id)
STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, stmn2_cryptic_coverage, stmn2_annotated_coverage, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
janitor::clean_names() |> View()
STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, stmn2_cryptic_coverage, stmn2_annotated_coverage, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names() |>
select(-c(chromosome, start, end, strand, rail_id, junction_coverage, junction_avg_coverage)) |>
rename_all(~str_replace_all(.x, "_x", "_STMN2")) |>
rename_all(~str_replace_all(.x, "_y", "_ARHGAP32")) |>
View()
STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, stmn2_cryptic_coverage, stmn2_annotated_coverage, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names() |>
select(-c(chromosome, start, end, strand, rail_id, junction_coverage, junction_avg_coverage)) |>
rename_all(~str_replace_all(.x, "_x", "_STMN2")) |>
rename_all(~str_replace_all(.x, "_y", "_ARHGAP32")) |>
rename("cryptic_count_STMN2" = "stmn2_cryptic_coverage",
"anno_count_STMN2" = "stmn2_annotated_coverage",
"anno_count_ARHGAP32" = "anno_count",
"cryptic_count_ARHGAP32" = "cryptic_count") |>
View()
common_STMN2_ARHGAP32 <- STMN2_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_STMN2_ARHGAP32) |>
select(case_submitter_id, stmn2_cryptic_coverage, stmn2_annotated_coverage, jir) |>
left_join(ARHGAP32_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names() |>
select(-c(chromosome, start, end, strand, rail_id, junction_coverage, junction_avg_coverage)) |>
rename_all(~str_replace_all(.x, "_x", "_STMN2")) |>
rename_all(~str_replace_all(.x, "_y", "_ARHGAP32")) |>
rename("cryptic_count_STMN2" = "stmn2_cryptic_coverage",
"anno_count_STMN2" = "stmn2_annotated_coverage",
"anno_count_ARHGAP32" = "anno_count",
"cryptic_count_ARHGAP32" = "cryptic_count")
View(common_STMN2_ARHGAP32)
intersect(ARHGAP32_cryptic_cBio$case_submitter_id, SYNJ2_cryptic_cBio$case_submitter_id)
common_ARHGAP32_SYNJ2 <- ARHGAP32_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_ARHGAP32_SYNJ2) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(SYNJ2_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
select(-cancer) |>
janitor::clean_names() |>
rename_all(~str_replace_all(.x, "_x", "_ARHGAP32")) |>
rename_all(~str_replace_all(.x, "_y", "_SYNJ2"))
common_ARHGAP32_SYNJ2 <- ARHGAP32_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_ARHGAP32_SYNJ2) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(SYNJ2_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
filter(sample_type == "Primary Tumor") |>
select(-cancer) |>
janitor::clean_names() |>
rename_all(~str_replace_all(.x, "_x", "_ARHGAP32")) |>
rename_all(~str_replace_all(.x, "_y", "_SYNJ2"))
View(common_ARHGAP32_SYNJ2)
common_ARHGAP32_SYNJ2 <- ARHGAP32_cryptic_cBio |>
filter(sample_type == "Primary Tumor",
case_submitter_id %in% common_patients_ARHGAP32_SYNJ2) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(SYNJ2_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
select(-cancer) |>
janitor::clean_names() |>
rename_all(~str_replace_all(.x, "_x", "_ARHGAP32")) |>
rename_all(~str_replace_all(.x, "_y", "_SYNJ2"))
common_ARHGAP32_SYNJ2 <- ARHGAP32_cryptic_cBio |>
filter(case_submitter_id %in% common_patients_ARHGAP32_SYNJ2) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(SYNJ2_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
select(-cancer) |>
janitor::clean_names() |>
rename_all(~str_replace_all(.x, "_x", "_ARHGAP32")) |>
rename_all(~str_replace_all(.x, "_y", "_SYNJ2"))
View(common_ARHGAP32_SYNJ2)
common_ARHGAP32_SYNJ2 <- ARHGAP32_cryptic_cBio |>
filter(case_submitter_id %in% common_patients_ARHGAP32_SYNJ2) |>
select(case_submitter_id, start, end, strand, anno_count, cryptic_count, jir) |>
left_join(SYNJ2_cryptic_cBio, by = "case_submitter_id") |>
distinct() |>
select(-cancer) |>
filter(sample_type == "Primary Tumor") |>
janitor::clean_names() |>
rename_all(~str_replace_all(.x, "_x", "_ARHGAP32")) |>
rename_all(~str_replace_all(.x, "_y", "_SYNJ2"))
View(common_ARHGAP32_SYNJ2)
library(ggplot2)
library(tidyr)
library(ggpubr)
library(dplyr)
library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(clipr)
library(naniar)
library(rstatix)
library(knitr)
library(snapcount)
library(ggsignif)
View(maf_1)
project_list <- c("TCGA-BRCA", "TCGA-THCA", "TCGA-UCEC", "TCGA-ACC",
"TCGA-KICH", "TCGA-HNSC", "TCGA-LIHC", "TCGA-MESO",
"TCGA-LAML", "TCGA-KIRP", "TCGA-KIRC", "TCGA-GBM",
"TCGA-LGG", "TCGA-SARC", "TCGA-PCPG", "TCGA-READ",
"TCGA-PAAD", "TCGA-LUAD", "TCGA-PRAD", "TCGA-OV",
"TCGA-LUSC", "TCGA-TGCT", "TCGA-THYM", "TCGA-UVM",
"TCGA-SKCM", "TCGA-UCS", "TCGA-STAD")
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
library(GenomicDataCommons)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
library(GenomicDataCommons)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
install.packages(GenomicDataCommons)
install.packages("GenomicDataCommons")
library(GenomicDataCommons)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
GDCquery_projects()
install.packages("GenomicDataCommons")
install.packages("GenomicDataCommons")
install.packages("BiocManager")
BiocManager::install("snapcount")
install.packages("BiocManager")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("snapcount")
BiocManager::install("snapcount", force = TRUE)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
library(snapcount)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
library(snapcount)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
library(ggplot2)
library(tidyr)
library(ggpubr)
library(dplyr)
library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(clipr)
library(naniar)
library(rstatix)
library(knitr)
library(snapcount)
library(ggsignif)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
library(snapcount)
library(GenomicDataCommons)
for (project in project_list) {
file_output = glue::glue("data/{project}.csv")
if(!file.exists(file_output)){
query <- GDCquery(
project = project,
data.category = "Simple Nucleotide Variation",
data.type = "Masked Somatic Mutation",
access = "open"
)
GDCdownload(query) #What is this line doing? Does it actually assign to somethign?
maf <- GDCprepare(query)
if (!is.null(maf$data) && nrow(maf$data) > 0) {
write.csv(maf)
}
}else{
print('file exists')
print(file_output)
}
}
