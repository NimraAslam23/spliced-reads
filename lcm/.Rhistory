"ALS",
"Control")) |>
relocate(disease, .after = sample_name)
stmn2_all_junctions_orig <- read_tsv("stmn2_all_junctions.bed",
col_names = c("chrosome", "start", "end", "sample_name",
"n_spliced_reads", "strand"))
stmn2_all_junctions <- unique(stmn2_all_junctions_orig)
stmn2_all_junctions$sample_name <- gsub(".SJ.out", "", as.character(stmn2_all_junctions$sample_name))
spliced_reads_pdtp_stmn2 <- stmn2_all_junctions |>
left_join(spliced_reads_pdtp, by=c("sample_name", "chrosome", "start",
"end", "n_spliced_reads", "strand"))
spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |>
mutate(disease = ifelse(grepl("ALS", sample_name),
"ALS",
"Control")) |>
relocate(disease, .after = sample_name)
View(spliced_reads_pdtp_stmn2)
spliced_reads_pdtp_stmn2 <- stmn2_all_junctions |>
left_join(pdtp_orig, by=c("sample_name"))
library(tidyverse)
library(ggplot2)
library(tidyr)
library(dplyr)
spliced_reads_pdtp_stmn2 <- stmn2_all_junctions |>
left_join(pdtp_orig, by=c("sample_name"))
spliced_reads_pdtp_stmn2 <- stmn2_all_junctions |>
left_join(ptdp_orig, by=c("sample_name"))
View(spliced_reads_pdtp_stmn2)
View(spliced_reads)
spliced_reads_ptdp_stmn2 <- stmn2_all_junctions |>
left_join(ptdp_orig, by=c("sample_name"))
View(spliced_reads_ptdp_stmn2)
View(M1.BB)
spliced_reads_pdtp_stmn2 |>
filter(grepl("STMN2", junction_name))
View(stmn2_all_junctions_orig)
View(spliced_reads_pdtp_stmn2)
View(stmn2_all_junctions_orig)
View(ptdp_orig)
View(ptdp_orig)
View(spliced_reads_pdtp)
spliced_reads_pdtp_select |>
filter(grepl("STMN2", junction_name))
unique(stmn2_all_junctions$end)
stmn2_all_junctions |>
distinct(end)
View(ptdp_orig)
View(spliced_reads)
View(stmn2_all_junctions_orig)
View(spliced_reads_pdtp_stmn2)
View(spliced_reads_pdtp_select)
View(spliced_reads_orig)
View(spliced_reads_pdtp_stmn2)
View(spliced_reads_pdtp_select)
spliced_reads_pdtp_select |>
filter(grepl("STMN2", junction_name))
spliced_reads_pdtp_select |>
filter(grepl("STMN2", junction_name))
spliced_reads_pdtp_stmn2 |>
mutate(junction = ifelse(grepl("79616822", end),
"cryptic",
"annotated"))
spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |>
mutate(junction = ifelse(grepl("79616822", end),
"cryptic",
"annotated"))
spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |>
mutate(junction = ifelse(grepl("79616822", end),
"cryptic",
"annotated")) |>
relocate(junction, .after = sample_name)
spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |>
mutate(junction = ifelse(grepl("79616822", end),
"cryptic",
"annotated")) |>
relocate(junction, .after = sample_name))
spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |>
mutate(junction = ifelse(grepl("79616822", end),
"cryptic",
"annotated")) |>
relocate(junction, .after = sample_name)
spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |>
mutate(junction = ifelse(grepl("79616822", end),
"cryptic",
"annotated")) |>
mutate(disease = ifelse(grepl("ALS", sample_name),
"ALS",
"control")) |>
relocate(disease, .after = sample_name) |>
relocate(junction, .after = disease)
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = disease, y = n_spliced_reads)) |>
geom_boxplot()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = disease, y = n_spliced_reads)) +
geom_boxplot()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
ggplot(aes(x = disease, y = n_spliced_reads)) +
geom_boxplot()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
ggplot(aes(x = disease, y = n_spliced_reads)) +
geom_boxplot() +
labs(
title = "Annotated STMN2 event has higher expression in the control samples",
y = "Number of spliced reads")
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop.na() |>
ggplot(aes(x = pTDP_category, y = n_spliced_reads)) +
geom_boxplot()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = n_spliced_reads)) +
geom_boxplot()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = n_spliced_reads)) +
geom_boxplot() +
labs(
title = "Higher expression of annotated STMN2 event with low levels of pTDP",
x = "Level of phosphorylated TDP-43",
y = "Number of spliced reads")
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = n_spliced_reads)) +
geom_boxplot() +
labs(
title = "Higher expression of annotated STMN2 event with low levels of pTDP",
x = "Level of phosphorylated TDP-43",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads)) +
geom_point()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads, color = junction)) +
geom_point()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads)) +
geom_point()
spliced_reads_pdtp_stmn2 |>
filter(grepl("annotated", junction)) |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads, color = junction)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads, color = junction)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "Number of spliced reads",
color = "Junction"
)
spliced_reads_pdtp_stmn2 |>
ggplot(aes(x = junction, y = n_spliced_reads,fill = disease)) +
geom_boxplot() +
labs(
title = "Annotated STMN2 event has higher expression in the control samples",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
ggplot(aes(x = disease, y = n_spliced_reads)) +
geom_boxplot() +
labs(
title = "Annotated STMN2 event has higher expression in the control samples",
y = "Number of spliced reads"
) + facet_wrap(~junction)
spliced_reads_pdtp_stmn2 |>
ggplot(aes(x = disease, y = n_spliced_reads, fill = disease)) +
geom_boxplot() +
labs(
title = "Annotated STMN2 event has higher expression in the control samples",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
ggplot(aes(x = junction, y = n_spliced_reads, fill = disease)) +
geom_boxplot() +
labs(
title = "Annotated STMN2 event has higher expression in the control samples",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
drop_na() |>
ggplot(aes(x = junction, y = n_spliced_reads, fill = pTDP_category)) +
geom_boxplot() +
labs(
title = "Higher expression of annotated STMN2 event with low levels of pTDP",
x = "Level of phosphorylated TDP-43",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
drop_na() |>
ggplot(aes(x = junction, y = n_spliced_reads, fill = pTDP_category)) +
geom_boxplot() +
labs(
title = "Higher expression of annotated STMN2 event with low levels of pTDP",
x = "Junction",
y = "Number of spliced reads"
)
spliced_reads_pdtp_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = n_spliced_reads, color = junction)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "Number of spliced reads",
color = "Junction"
)
View(spliced_reads_pdtp_select)
View(spliced_reads_pdtp_stmn2)
View(mean_per_junction)
spliced_reads_pdtp_stmn2 |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads')
View(mean_per_junction_sig)
mean_per_junction |>
semi_join(significant_junctions, by=("junction_name")) |>
mutate(higher_value = ifelse(ALS>control,"ALS","control")) |>
separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
janitor::tabyl(junc_cat,higher_value)
mean_per_junction |>
semi_join(significant_junctions, by=("junction_name")) |>
mutate(higher_value = ifelse(ALS>control,"ALS","control")) |> group_by(higher_value) |>
separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
summarize(mean_n_datasets = mean(n_datasets_junction_found))
?summarize()
spliced_reads_pdtp_stmn2 |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads')
psi_stmn2 <- spliced_reads_pdtp_stmn2 |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads')
View(psi_stmn2)
psi_stmn2 |>
group_by(sample_name) |>
mutate(psi =
cryptic/(annotated+cryptic))
psi_stmn2 |>
group_by(sample_name) |>
mutate(total_counts = annotated + cryptic)
psi_stmn2 <- spliced_reads_pdtp_stmn2 |>
select(-start,-end) |>
unique() |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads',
values_fill = 0)
psi_stmn2 |>
group_by(sample_name) |>
mutate(total_counts = annotated + cryptic)
psi_stmn2 |>
group_by(sample_name) |>
mutate(total_counts = annotated + cryptic) |>
mutate(psi = cryptic / total_counts)
spliced_reads_pdtp_stmn2 |>
select(-start,-end)
spliced_reads_pdtp_stmn2
spliced_reads_pdtp_stmn2 |>
select(-start,-end)
spliced_reads_pdtp_stmn2 |>
select(-start,-end) |>
unique()
spliced_reads_pdtp_stmn2 |>
select(start,end)
spliced_reads_pdtp_stmn2 |>
unique() |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads',
values_fill = 0)
spliced_reads_pdtp_stmn2 |>
select(-start,-end) |>
unique() |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads',
values_fill = 0)
spliced_reads_pdtp_stmn2 |>
unique() |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads',
values_fill = 0)
psi_stmn2 <- spliced_reads_pdtp_stmn2 |>
select(-start,-end) |>
unique() |>
pivot_wider(names_from = 'junction',
values_from = 'n_spliced_reads',
values_fill = 0)
psi_stmn2 |>
group_by(sample_name) |>
mutate(total_counts = annotated + cryptic) |>
mutate(psi = cryptic / total_counts)
psi_stmn2 <- psi_stmn2 |>
group_by(sample_name) |>
mutate(total_counts = annotated + cryptic) |>
mutate(psi = cryptic / total_counts)
psi_stmn2 |>
ggplot(aes(x = junction, y = psi, fill = disease)) +
geom_boxplot()
psi_stmn2 |>
ggplot(aes(x = pTDP_category, y = psi))
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = psi)) +
geom_boxplot()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = disease, y = psi, fill = pTDP_category)) +
geom_boxplot()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = psi, fill = pTDP_category)) +
geom_boxplot()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = psi, fill = pTDP_category)) +
geom_boxplot() +
theme(legend.position = "none")
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi)) +
geom_point()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, fill = pTDP_category)) +
geom_point()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, color = pTDP_category)) +
geom_point()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = pTDP_category, y = psi, fill = pTDP_category)) +
geom_boxplot() +
theme(legend.position = "none") +
labs(
title = "STMN2 cryptic splicing is higher with low levels of pTDP",
x = "pTDP-43 accumulation",
y = "PSI value"
)
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, color = pTDP_category)) +
geom_point()
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, color = pTDP_category)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "PSI value"
)
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, color = pTDP_category)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "PSI value",
color = "pTDP-43 accumulation"
)
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, color = pTDP_category)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "PSI value",
color = "pTDP-43 \naccumulation"
)
psi_stmn2 |>
drop_na() |>
ggplot(aes(x = MN_death, y = psi, color = pTDP_category)) +
geom_point() +
labs(
x = "Motor neuron death (%)",
y = "PSI value",
color = "pTDP-43\naccumulation"
)
View(wilcox_tested_nested)
View(mean_n_datasets_found)
View(mean_per_junction_sig)
View(significant_junctions)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(dplyr)
mean_per_junction |>
semi_join(significant_junctions, by=("junction_name")) |>
mutate(higher_value = ifelse(ALS>control,"ALS","control")) |>
separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
janitor::tabyl(junc_cat,higher_value)
mean_per_junction |>
semi_join(significant_junctions, by=("junction_name")) |>
mutate(higher_value = ifelse(ALS>control,"ALS","control")) |>
separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
janitor::tabyl(junc_cat,higher_value)
mean_per_junction |>
semi_join(significant_junctions, by=("junction_name")) |>
mutate(higher_value = ifelse(ALS>control,"ALS","control")) |>
separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
ggplot(aes(x = junc_cat, fill = higher_value)) +
geom_bar(position = "dodge") +
labs(
title = "Number of junctions significantly higher in ALS and controls",
x = "Junction category",
y = "Number of junctions",
color = "Group",
)
mean_per_junction |>
semi_join(significant_junctions, by=("junction_name")) |>
mutate(higher_value = ifelse(ALS>control,"ALS","control")) |>
separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
janitor::tabyl(junc_cat,higher_value)
View(ptdp_orig)
# JIR measures the relative prevalence of two splicing patterns
jir <- junction_inclusion_ratio(list(cryptic_query_exact),
list(anno_query),
group_names=c(glue::glue("{gene_name}_cryptic"),
glue::glue("{gene_name}_annotated")))
library(snapcount)
library(dplyr)
library(tidyr)
gene_name = "STMN2"
snapcount_coords_cryptic_STMN2 = "chr8:79611215-79616821"
snapcount_coords_annotated_STMN2 = "chr8:79611215-79636801"
strand_code = "+"
# query TCGA for all junctions within the region of cryptic STMN2 events
cryptic_query <-  QueryBuilder(compilation = 'tcga',regions = snapcount_coords_cryptic_STMN2)
if(strand_code == "+"){
cryptic_query <- set_row_filters(cryptic_query, strand == "+") # filter to only query junctions on the + strand within the stated region
}else if(strand_code == "-"){
cryptic_query <- set_row_filters(cryptic_query, strand == "-") # filter to only query junctions on the - strand within the stated region
}
View(cryptic_query)
# query TCGA for exon-exon splice junctions within region of cryptic STMN2 events - make df of these junctions with all TCGA data
juncs_on_cryptic <- query_jx(cryptic_query) # query all exon-exon splice junctions
View(juncs_on_cryptic)
juncs_on_cryptic_flat <- query_jx(cryptic_query,return_rse = FALSE) # query data returned as a dataframe
samples_with_cryptic = juncs_on_cryptic@colData |>
as.data.frame() # new dataframe containing all TCGA on the queried exon-exon splice junctions
samples_with_cryptic <- samples_with_cryptic |>
select(c("rail_id",
"gdc_cases.demographic.gender",
"gdc_cases.submitter_id",
"gdc_cases.project.name",
"gdc_cases.project.primary_site",
"gdc_cases.diagnoses.tumor_stage",
"gdc_cases.samples.sample_type",
"cgc_case_primary_site",
"junction_coverage",
"junction_avg_coverage")) # same dataframe as above but only columns we need (instead of 861!)
View(samples_with_cryptic)
juncs_on_cryptic_flat = juncs_on_cryptic_flat |> # the df containing queried exon-exon splice junctions in cryptic STMN2 region
select(chromosome,start,end,strand,samples) |> # only 5 columns we need
separate_rows(samples, sep = ',') |> # samples previously appeared as list after df, but this code adds the samples to each row
filter(samples != "") |> # remove rows with no 'samples'
separate(samples, into = c("rail_id","count")) |> # split 'samples' column (contains two values) into two: rail_id and count
mutate(rail_id = as.integer(rail_id)) |> # change rail_id values to integers (previously characters)
mutate(count = as.numeric(count)) # change all count values to numbers (previously characters)
# only exon-exon splice junctions with same end coordinates in the region
# join the queried data with the TCGA data
juncs_on_cryptic_flat |>
mutate(rail_id = as.integer(rail_id)) |> # already did this in code above - why again?
left_join(samples_with_cryptic) |>
filter(end == 79616821) |>
View()
# query TCGA for all junctions within the region of annotated STMN2 events
anno_query <-  QueryBuilder(compilation = 'tcga',regions = snapcount_coords_annotated_STMN2)
anno_query <- set_coordinate_modifier(anno_query, Coordinates$Exact) # return junctions whose start and end coordinates match the boundaries of the annotated region
if(strand_code == "+"){
anno_query <- set_row_filters(anno_query, strand == "+") # only query junctions on the + strand within the stated region
}else if(strand_code == "-"){
anno_query <- set_row_filters(anno_query, strand == "-") # only query junctions on the - strand within the stated region
}
# return junctions whose start and end coordinates match the boundaries of the cryptic region
cryptic_query_exact <- set_coordinate_modifier(cryptic_query, Coordinates$Exact)
# JIR measures the relative prevalence of two splicing patterns
jir <- junction_inclusion_ratio(list(cryptic_query_exact),
list(anno_query),
group_names=c(glue::glue("{gene_name}_cryptic"),
glue::glue("{gene_name}_annotated")))
View(jir)
# join the jir for queried junctions with TCGA data
jir |>
left_join(samples_with_cryptic,by = c('sample_id' = 'rail_id')) |>
View()
