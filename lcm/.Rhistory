# GBM has 154 false, 11 true
aneuploidy_STMN2 <- cBio_clinical |>
left_join(STMN2_clinical_jir,by = c("case_submitter_id")) |>
janitor::clean_names() |>
rename("cancer_abbrev" = "cancer_abbrev_x") |>
select(case_submitter_id, study_id, cancer_abbrev, aneuploidy_score, cryptic_count, anno_count) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
unique() |>
mutate(aneuploidy_score = as.numeric(aneuploidy_score)) |>
filter(!is.na(aneuploidy_score) & aneuploidy_score != "NA") |>
mutate(stmn2_cryptic_detected = cryptic_count >= 2) |>
group_by(study_start) |>
mutate(n_total_samples = n_distinct(case_submitter_id)) |>
mutate(n_detected_stmn2 = sum(stmn2_cryptic_detected,na.rm = TRUE)) |>
ungroup() |>
filter(!is.na(stmn2_cryptic_detected)) |>
filter(n_detected_stmn2 > 2) |>
group_by(study_start) |>
mutate(wilcox_result = if (length(unique(stmn2_cryptic_detected)) < 2) {NA}
else {
list(broom::tidy(wilcox.test(aneuploidy_score ~ stmn2_cryptic_detected, exact = FALSE)))
}) |>
ungroup() |>
unnest(wilcox_result)
aneuploidy_STMN2 |>
ggplot(aes(x = stmn2_cryptic_detected,
y = aneuploidy_score)) +
geom_boxplot(aes(fill = stmn2_cryptic_detected)) +
labs(x = "Cancer Type",
y = "Aneuploidy Score") +
facet_wrap(~study_start) +
stat_compare_means(comparisons = list(c("TRUE", "FALSE")), label = "p.format") +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = "Cryptic STMN2 detected")) +
theme(
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10, face = "bold"),
strip.background = element_rect(fill = "lightgray"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12)
)
two_junc <- read.csv
two_junc <- read.csv("two_junc.csv", sep="\t")
View(two_junc)
two_junc <- read.csv("two_junc.csv", sep=",")
View(two_junc)
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(anno_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count,
jir, .after = cryptic_count)
return(query)
[gene_name]_query <- query
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(anno_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count,
jir, .after = cryptic_count)
assign(paste0(gene_name, "_query"), query)
return(query)
}
combine_two_functions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(anno_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(anno_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
View(STMN2_query)
combine_two_junctions("ARHGAP32", "chr11:128992047-128998318", "chr11:128988126-128998318", "-")
View(ARHGAP32_query)
View(STMN2_query)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(clipr)
library(naniar)
library(ggpubr)
library(rstatix)
library(ggplot2)
library(tidyr)
library(dplyr)
library(knitr)
library(snapcount)
library(ggsignif)
library(TCGAbiolinks)
library(ggsurvfit)
library(survival)
library(survminer)
# Chunk 2: functions
count_query <- function(gene_name, snapcount_coords, strand_code) {
cryptic_query <-  QueryBuilder(compilation = 'tcga',regions = snapcount_coords)
if(strand_code == "+"){
cryptic_query <- set_row_filters(cryptic_query, strand == "+")
}else if(strand_code == "-"){
cryptic_query <- set_row_filters(cryptic_query, strand == "-")
}
cryptic_query_exact <- set_coordinate_modifier(cryptic_query, Coordinates$Exact)
print("junction querying beginning")
juncs_on <- query_jx(cryptic_query)
juncs_on_flat <- query_jx(cryptic_query,return_rse = FALSE)
samples_with <- juncs_on@colData |>
as.data.frame()
print("junction querying done")
samples_with <- samples_with |>
select(c("rail_id",
"gdc_cases.demographic.gender",
"gdc_cases.submitter_id",
"gdc_cases.project.name",
"gdc_cases.project.primary_site",
"gdc_cases.diagnoses.tumor_stage",
"gdc_cases.samples.sample_type",
"cgc_case_primary_site",
"junction_coverage",
"junction_avg_coverage"))
juncs_on_flat <- juncs_on_flat |>
select(chromosome,start,end,strand,samples) |>
separate_rows(samples, sep = ',') |>
filter(samples != "") |>
separate(samples, into = c("rail_id","count")) |>
mutate(rail_id = as.integer(rail_id)) |>
mutate(count = as.numeric(count))
gene_df <- juncs_on_flat |>
left_join(samples_with) |>
filter(end == str_split(snapcount_coords,'-',simplify = TRUE)[[2]]) |>
filter(start == str_split(str_split(snapcount_coords,'-',simplify = TRUE)[[1]],":",simplify = TRUE)[[2]])
return(gene_df)
}
# Chunk 3: ARHGAP32 cryptic and annotated reads
gene_name = "ARHGAP32"
snapcount_coords_cryptic = "chr11:128992047-128998318"
snapcount_coords_annotated = "chr11:128988126-128998318"
strand_code = "-"
# Chunk 4: querying for cryptic and annotated ARHGAP32 reads
#ARHGAP32_cryptic_query <- count_query(gene_name = "ARHGAP32", snapcount_coords = "chr11:128992047-128998318", strand_code = "-")
#ARHGAP32_anno_query <- count_query(gene_name = "ARHGAP32", snapcount_coords = "chr11:128988126-128998318", strand_code = "-")
#write.table(ARHGAP32_cryptic_query, file = "ARHGAP32_cryptic_query.txt")
#write.table(ARHGAP32_anno_query, file = "ARHGAP32_anno_query.txt")
ARHGAP32_cryptic_query <- read.table("ARHGAP32_cryptic_query.txt", sep="", header = T)
ARHGAP32_anno_query <- read.table("ARHGAP32_anno_query.txt", sep="", header = T)
ARHGAP32_cryptic_query <- ARHGAP32_cryptic_query |> rename("cryptic_count" = "count")
ARHGAP32_anno_query <- ARHGAP32_anno_query |> rename("anno_count" = "count")
ARHGAP32_query <- ARHGAP32_cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(ARHGAP32_anno_query, by = "gdc_cases.submitter_id")
ARHGAP32_query <- ARHGAP32_query |>
relocate(cryptic_count, .after = anno_count)
ARHGAP32_query <- ARHGAP32_query |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(jir, .after = cryptic_count)
#write_clip(ARHGAP32_query$gdc_cases.submitter_id)
View(ARHGAP32_query)
combine_two_junctions("ARHGAP32", "chr11:128992047-128998318", "chr11:128988126-128998318", "-")
combine_two_junctions("ARHGAP32", "chr11:128992047-128998318", "chr11:128988126-128998318", "-")
View(ARHGAP32_query)
#STMN2_cryptic_query <- count_query(gene_name = "STMN2", snapcount_coords = "chr8:79611215-79616821", strand_code = "+")
#STMN2_anno_query <- count_query(gene_name = "STMN2", snapcount_coords = "chr8:79611215-79636801", strand_code = "+")
#write.table(STMN2_cryptic_query, file = "STMN2_cryptic_query.txt")
#write.table(STMN2_anno_query, file = "STMN2_anno_query.txt")
STMN2_cryptic_query <- read.table("STMN2_cryptic_query.txt", sep="", header = T)
STMN2_anno_query <- read.table("STMN2_anno_query.txt", sep="", header = T)
STMN2_cryptic_query <- STMN2_cryptic_query |> rename("cryptic_count" = "count")
STMN2_anno_query <- STMN2_anno_query |> rename("anno_count" = "count")
STMN2_query <- STMN2_cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(STMN2_anno_query, by = "gdc_cases.submitter_id")
STMN2_query <- STMN2_query |>
relocate(cryptic_count, .after = anno_count)
STMN2_query <- STMN2_query |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(jir, .after = cryptic_count)
#write_clip(STMN2_query$gdc_cases.submitter_id)
STMN2_cryptic_query <- STMN2_cryptic_query |> rename("cryptic_count" = "count")
View(STMN2_query)
#SYNJ2_cryptic_query <- count_query(gene_name = "SYNJ2", snapcount_coords = "chr6:158017291-158019983", strand_code = "+")
#SYNJ2_anno_query <- count_query(gene_name = "SYNJ2", snapcount_coords = "chr6:158017291-158028755", strand_code = "+")
#write.table(SYNJ2_cryptic_query, file = "SYNJ2_cryptic_query.txt")
#write.table(SYNJ2_anno_query, file = "SYNJ2_anno_query.txt")
SYNJ2_cryptic_query <- read.table("SYNJ2_cryptic_query.txt", sep="", header = T)
SYNJ2_anno_query <- read.table("SYNJ2_anno_query.txt", sep="", header = T)
#SYNJ2_cryptic_query <- SYNJ2_cryptic_query |> rename("cryptic_count" = "count")
#SYNJ2_anno_query <- SYNJ2_anno_query |> rename("anno_count" = "count")
SYNJ2_query <- SYNJ2_cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(SYNJ2_anno_query, by = "gdc_cases.submitter_id")
SYNJ2_query <- SYNJ2_query |>
relocate(cryptic_count, .after = anno_count)
SYNJ2_query <- SYNJ2_query |>
mutate(jir = anno_count/(anno_count + cryptic_count)) |>
relocate(jir, .after = cryptic_count)
#write_clip(SYNJ2_query$gdc_cases.submitter_id)
combine_two_junctions("SYNJ2", "chr6:158017291-158019983", "chr6:158017291-158028755", "+")
combine_two_junctions("SYNJ2", "chr6:158017291-158019983", "chr6:158017291-158028755", "+")
combine_two_junctions("SYNJ2", "chr6:158017291-158019983", "chr6:158017291-158028755", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(anno_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("SYNJ2", "chr6:158017291-158019983", "chr6:158017291-158028755", "+")
View(STMN2_query)
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- cryptic_query |>
select(gdc_cases.submitter_id, cryptic_count) |>
left_join(anno_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
select(gdc_cases.submitter_id, anno_count) |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
View(STMN2_query)
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
select(gdc_cases.submitter_id, anno_count) |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query("gene_name", "snapcount_coords_cryptic", "strand_code") |>
rename("cryptic_count" = "count")
anno_query <- count_query("gene_name", "snapcount_coords_annotated", "strand_code") |>
rename("anno_count" = "count")
query <- anno_query |>
select(gdc_cases.submitter_id, anno_count) |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annottaed, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
select(gdc_cases.submitter_id, anno_count) |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count")
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
select(gdc_cases.submitter_id, anno_count) |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions("ARHGAP32", "chr11:128992047-128998318", "chr11:128988126-128998318", "-")
View(ARHGAP32_query)
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count))
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
View(STMN2_query)
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count,
jir, .after = cryptic_count)
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count,
jir, .before = gdc_cases.demographic_gender)
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count) |>
relocate(jir, .after = cryptic_count)
assign(paste0(gene_name, "_query"), query, envir = .GlobalEnv)
return(query)
}
combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
View(STMN2_query)
combine_two_junctions("ARHGAP32", "chr11:128992047-128998318", "chr11:128988126-128998318", "-")
View(ARHGAP32_query)
combine_two_junctions("SYNJ2", "chr6:158017291-158019983", "chr6:158017291-158028755", "+")
View(SYNJ2_query)
stmn2_query <- combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
arhgap32_query <- combine_two_junctions("ARHGAP32", "chr11:128992047-128998318", "chr11:128988126-128998318", "-")
synj2_query <- combine_two_junctions("SYNJ2", "chr6:158017291-158019983", "chr6:158017291-158028755", "+")
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count) |>
relocate(jir, .after = cryptic_count)
return(query)
}
tmp = list(data.table(matrix()))
View(tmp)
for (val in rownames(two_junc)){
id = as.numeric(val)
print(id)
#tmp[[id]] = combine_two_junctions(inc1 = two_junc[id]$incl,
#excl = two_junc[id]$excl,
#strand_code = two_junc[id]$annot.strand,
#gene_name = )
}
print(two_junc[id]$incl)
for (val in rownames(two_junc)){
id = as.numeric(val)
print(id)
print(two_junc[id]$incl)
#tmp[[id]] = combine_two_junctions(inc1 = two_junc[id]$incl,
#excl = two_junc[id]$excl,
#strand_code = two_junc[id]$annot.strand,
#gene_name = )
}
print(two_junc[id,]$incl)
for (val in rownames(two_junc)){
id = as.numeric(val)
#print(id)
#print(two_junc[id,]$incl) # take the row for that value of 'id' and give the inclusion results
tmp[[id]] = combine_two_junctions(inc1 = two_junc[id,]$incl,
excl = two_junc[id,]$excl,
strand_code = two_junc[id,]$annot.strand,
gene_name = two_junc[id,]$annot.gene_id)
}
for (val in rownames(two_junc)){
id = as.numeric(val)
#print(id)
#print(two_junc[id,]$incl) # take the row for that value of 'id' and give the inclusion results
tmp[[id]] = combine_two_junctions(snapcount_coords_annotated = two_junc[id,]$incl,
snapcount_coords_cryptic = two_junc[id,]$excl,
strand_code = two_junc[id,]$annot.strand,
gene_name = two_junc[id,]$annot.gene_id)
}
is_null = purrr::map(tmp, function(df){is.null(dim(df))}) #anonymous function function(df)
View(is_null)
tcga_cryptics_metatable = tmp[which(is_null == FALSE)] |> rbindlist()
View(tcga_cryptics_metatable)
head(tcga_cryptics_metatable)
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count) |>
relocate(jir, .after = cryptic_count) |>
mutate(gene_name = gene_name)
return(query)
}
stmn2_query <- combine_two_junctions("STMN2", "chr8:79611215-79616821", "chr8:79611215-79636801", "+")
View(stmn2_query)
for (val in rownames(two_junc)){
id = as.numeric(val)
#print(id)
#print(two_junc[id,]$incl) # take the row for that value of 'id' and give the inclusion results
tmp[[id]] = combine_two_junctions(snapcount_coords_annotated = two_junc[id,]$incl,
snapcount_coords_cryptic = two_junc[id,]$excl,
strand_code = two_junc[id,]$annot.strand,
gene_name = two_junc[id,]$annot.gene_id)
}
tmp = list(data.table(matrix()))
for (val in rownames(two_junc)){
id = as.numeric(val)
#print(id)
#print(two_junc[id,]$incl) # take the row for that value of 'id' and give the inclusion results
tmp[[id]] = combine_two_junctions(snapcount_coords_annotated = two_junc[id,]$incl,
snapcount_coords_cryptic = two_junc[id,]$excl,
strand_code = two_junc[id,]$annot.strand,
gene_name = two_junc[id,]$annot.gene_id)
}
is_null = purrr::map(tmp, function(df){is.null(dim(df))}) #anonymous function function(df)
tcga_cryptics_metatable = tmp[which(is_null == FALSE)] |> rbindlist()
tcga_cryptics_metatable = tmp[which(is_null == FALSE)] |> rbindlist()
View(tcga_cryptics_metatable)
View(tmp)
View(two_junc)
write.table(tcga_cryptics_metatable, file="tcga_cryptics_metatable.txt", sep=",")
