size = 4) +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(labels = c("Yes", "No"),
values = c("cancer_driver" = "tomato", "non_driver" = "dodgerblue"))
print(a)
print(b)
print(c)
print(d)
print(e)
print(f)
dev.off()
# comparing the general proportion of mutations in each gene to their proportion in the cases with >1 cryptic
gene_common_proportion <- mutation_clinical_data |>
left_join(gene_mutation_proportions, by="gene") |>
left_join(common_cases_mutation_proportions, by="gene") |>
filter(case_submitter_id %in% all_common_cases$case_submitter_id) |>
filter(gene %in% cosmic_cancer_genes$Gene) |>
pivot_longer(cols = c(general_proportion, common_cases_proportion),
names_to = "general_vs_common_cases",
values_to = "proportion") |>
mutate(general_vs_common_cases = case_when(
general_vs_common_cases == "general_proportion" ~ "general",
general_vs_common_cases == "common_cases_proportion" ~ "common",
TRUE ~ general_vs_common_cases
))
View(mutation_clinical_data)
View(lgg_mutations_orig)
View(STMN2_cryptic_cBio)
View(lgg_mutations)
# fraction of mutations that are known or novel in each cancer type with cryptic STMN2
# this plot is wrong - need help
STMN2_pcpg_gbm_lgg_mutations |>
mutate(cancer_driver_gene = ifelse(hugo_symbol %in% cosmic_cancer_genes$Gene,
'cancer_driver', 'non_driver')) |>
mutate(known_or_novel_variant =
ifelse(db_snp_rs == "novel", "novel",
ifelse(grepl("rs", db_snp_rs), "known", "no_info"))) |>
filter(cancer_driver_gene == "cancer_driver") |>
group_by(cancer_abbrev, known_or_novel_variant) |>
summarise(n = n()) |>
mutate(proportion = n/sum(n))
View(pcpg_mutations)
# fraction of mutations that are known or novel in each cancer type with cryptic STMN2
# this plot is wrong - need help
STMN2_pcpg_gbm_lgg_mutations |>
mutate(cancer_driver_gene = ifelse(hugo_symbol %in% cosmic_cancer_genes$Gene,
'cancer_driver', 'non_driver')) |>
mutate(known_or_novel_variant =
ifelse(db_snp_rs == "novel", "novel",
ifelse(grepl("rs", db_snp_rs), "known", "no_info"))) |>
filter(cancer_driver_gene == "cancer_driver") |>
group_by(cancer_abbrev, known_or_novel_variant) |>
summarise(n = n()) |>
mutate(proportion = n/sum(n)) |>
ggplot(aes(x = known_or_novel_variant, y = proportion,
fill = known_or_novel_variant,
label = scales::percent(proportion))) +
geom_col(position = "dodge") +
facet_wrap(~cancer_abbrev) +
labs(x = "Variant Type",
y = "Percentage of Mutations",
fill = "",
title = "Mutations in Cancer Patients with Cryptic STMN2 Events") +
geom_text(position = position_dodge(width = .9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::percent_format()) +
theme(legend.position="bottom")
# gene with the highest number of mutations in cryptic STMN2 cases
# how can I add to this plot to show how many of those mutations are known vs novel?
f <- STMN2_pcpg_gbm_lgg_mutations |>
mutate(cancer_driver_gene = ifelse(hugo_symbol %in% cosmic_cancer_genes$Gene,
'cancer_driver', 'non_driver')) |>
mutate(known_or_novel_variant =
ifelse(db_snp_rs == "novel", "novel",
ifelse(grepl("rs", db_snp_rs), "known", "no_info"))) |>
group_by(hugo_symbol) |>
summarise(n = n_distinct(case_submitter_id),
cancer_driver_gene)
View(f)
# gene with the highest number of mutations in cryptic STMN2 cases
# how can I add to this plot to show how many of those mutations are known vs novel?
f <- STMN2_pcpg_gbm_lgg_mutations |>
mutate(cancer_driver_gene = ifelse(hugo_symbol %in% cosmic_cancer_genes$Gene,
'cancer_driver', 'non_driver')) |>
mutate(known_or_novel_variant =
ifelse(db_snp_rs == "novel", "novel",
ifelse(grepl("rs", db_snp_rs), "known", "no_info"))) |>
group_by(hugo_symbol) |>
summarise(n = n_distinct(case_submitter_id),
cancer_driver_gene) |> unique()
View(f)
# tidy mutation data downloaded from cBioPortal for single cancer type
tidy_mutation_data <- function(mutations_orig, cryptic_cBio) {
cancer_abbrev <- strsplit(deparse(substitute(mutations_orig)), "_")[[1]][1]
cryptic_event <- strsplit(deparse(substitute(cryptic_cBio)), "_")[[1]][1]
mutations <- mutations_orig |>
janitor::clean_names() |>
mutate(case_submitter_id = str_extract(tumor_sample_barcode, "([^-]+-[^-]+-[^-]+)")) |>
relocate(case_submitter_id, .before="hugo_symbol") |>
select(c(case_submitter_id, hugo_symbol, entrez_gene_id, chromosome, start_position, end_position, strand,
consequence, variant_type, reference_allele, tumor_seq_allele2, db_snp_rs, tumor_sample_barcode,
n_ref_count, n_alt_count, hgv_sc, hgv_sp, hgv_sp_short, transcript_id, protein_position,
amino_acids, biotype, canonical, exon, feature_type, gene, impact, poly_phen, sift, variant_class,
all_effects)) |>
mutate(ifelse(case_submitter_id %in% cryptic_cBio$case_submitter_id, "cryptic", "non-cryptic")) |>
mutate(cryptic_event = cryptic_event) |>
mutate(cancer_abbrev = cancer_abbrev) |>
relocate(cryptic_event, .before = "case_submitter_id") |>
relocate(cancer_abbrev, .after = "case_submitter_id")
return(mutations)
}
gene_mutation_proportions <- mutation_clinical_data |>
group_by(gene) |>
summarise(gene_mutation_count = n_distinct(case_submitter_id)) |>
mutate(general_proportion = gene_mutation_count / sum(gene_mutation_count))
common_cases_mutation_proportions <- mutation_clinical_data |>
filter(case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(gene) |>
summarise(common_cases_mutation_count = n_distinct(case_submitter_id)) |>
mutate(common_cases_proportion = common_cases_mutation_count / sum(common_cases_mutation_count))
# comparing the general proportion of mutations in each gene to their proportion in the cases with >1 cryptic
gene_common_proportion <- mutation_clinical_data |>
left_join(gene_mutation_proportions, by="gene") |>
left_join(common_cases_mutation_proportions, by="gene") |>
filter(case_submitter_id %in% all_common_cases$case_submitter_id) |>
filter(gene %in% cosmic_cancer_genes$Gene) |>
pivot_longer(cols = c(general_proportion, common_cases_proportion),
names_to = "general_vs_common_cases",
values_to = "proportion") |>
mutate(general_vs_common_cases = case_when(
general_vs_common_cases == "general_proportion" ~ "general",
general_vs_common_cases == "common_cases_proportion" ~ "common",
TRUE ~ general_vs_common_cases
))
gene_common_proportion|>
filter(gene_mutation_count >= 100) |>
ggplot(aes(x = reorder(gene, proportion),
y = proportion,
fill = general_vs_common_cases)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
stat_compare_means(comparisons = list(c("general", "common")),
label = "p.format",
method = "t.test", # no t-test, chi square
paired = TRUE)
gene_common_proportion|>
filter(gene_mutation_count >= 100) |>
ggplot(aes(x = reorder(gene, proportion),
y = proportion,
fill = general_vs_common_cases)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
print(last_plot())
library(ggplot2)
library(tidyr)
library(ggpubr)
library(dplyr)
library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(clipr)
library(naniar)
library(knitr)
library(snapcount)
library(ggsignif)
library(TCGAbiolinks)
library(stringr)
library(rstatix)
# tidy mutation data downloaded from cBioPortal for single cancer type
tidy_mutation_data <- function(mutations_orig, cryptic_cBio) {
cancer_abbrev <- strsplit(deparse(substitute(mutations_orig)), "_")[[1]][1]
cryptic_event <- strsplit(deparse(substitute(cryptic_cBio)), "_")[[1]][1]
mutations <- mutations_orig |>
janitor::clean_names() |>
mutate(case_submitter_id = str_extract(tumor_sample_barcode, "([^-]+-[^-]+-[^-]+)")) |>
relocate(case_submitter_id, .before="hugo_symbol") |>
select(c(case_submitter_id, hugo_symbol, entrez_gene_id, chromosome, start_position, end_position, strand,
consequence, variant_type, reference_allele, tumor_seq_allele2, db_snp_rs, tumor_sample_barcode,
n_ref_count, n_alt_count, hgv_sc, hgv_sp, hgv_sp_short, transcript_id, protein_position,
amino_acids, biotype, canonical, exon, feature_type, gene, impact, poly_phen, sift, variant_class,
all_effects)) |>
mutate(cryptic_or_non = ifelse(case_submitter_id %in% cryptic_cBio$case_submitter_id, "cryptic", "non-cryptic")) |>
mutate(cryptic_event = cryptic_event) |>
mutate(cancer_abbrev = cancer_abbrev) |>
relocate(cryptic_event, .before = "case_submitter_id") |>
relocate(cancer_abbrev, .after = "case_submitter_id")
return(mutations)
}
gene_mutation_proportions <- mutation_clinical_data |>
group_by(gene) |>
summarise(gene_count = n_distinct(case_submitter_id)) |>
mutate(general_proportion = gene_count / sum(gene_count))
common_cases_mutation_proportions <- mutation_clinical_data |>
filter(case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(gene) |>
summarise(common_cases_mutation_count = n_distinct(case_submitter_id)) |>
mutate(common_cases_proportion = common_cases_mutation_count / sum(common_cases_mutation_count))
# comparing the general proportion of mutations in each gene to their proportion in the cases with >1 cryptic
gene_common_proportion <- mutation_clinical_data |>
left_join(gene_mutation_proportions, by="gene") |>
left_join(common_cases_mutation_proportions, by="gene") |>
filter(case_submitter_id %in% all_common_cases$case_submitter_id) |>
filter(gene %in% cosmic_cancer_genes$Gene) |>
pivot_longer(cols = c(general_proportion, common_cases_proportion),
names_to = "all_vs_multiple_cryptic_cases",
values_to = "proportion") |>
mutate(all_vs_multiple_cryptic_cases = case_when(
all_vs_multiple_cryptic_cases == "general_proportion" ~ "All Cases",
all_vs_multiple_cryptic_cases == "common_cases_proportion" ~ "Cases with Multiple Cryptic",
TRUE ~ all_vs_multiple_cryptic_cases
))
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |>
tibble::column_to_rownames("row_thing") |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |>
tibble::column_to_rownames("row_thing") |>
select(-contains_cryptic) |> View()
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |>
tibble::column_to_rownames("row_thing") |>
select(-contains_cryptic) |>
group_by(gene) |>
nest() |> View()
View((nest(group_by(select(tibble::column_to_rownames(mutate(ungroup(unique(select(summarise(group_by(ungroup(mutate(group_by(mutate(mutation_clinical_data,      contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id),      contains_cryptic), overall_samples_cryptic = n_distinct(case_submitter_id))),      gene, contains_cryptic), n = n_distinct(case_submitter_id),      overall_samples_cryptic), n, overall_samples_cryptic, gene))),      row_thing = glue::glue("{gene}_{contains_cryptic}")), "row_thing"),      -contains_cryptic), gene)))[[2]][[1]])
View((nest(group_by(select(tibble::column_to_rownames(mutate(ungroup(unique(select(summarise(group_by(ungroup(mutate(group_by(mutate(mutation_clinical_data,      contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id),      contains_cryptic), overall_samples_cryptic = n_distinct(case_submitter_id))),      gene, contains_cryptic), n = n_distinct(case_submitter_id),      overall_samples_cryptic), n, overall_samples_cryptic, gene))),      row_thing = glue::glue("{gene}_{contains_cryptic}")), "row_thing"),      -contains_cryptic), gene)))[[2]][[1]])
View((nest(group_by(select(tibble::column_to_rownames(mutate(ungroup(unique(select(summarise(group_by(ungroup(mutate(group_by(mutate(mutation_clinical_data,      contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id),      contains_cryptic), overall_samples_cryptic = n_distinct(case_submitter_id))),      gene, contains_cryptic), n = n_distinct(case_submitter_id),      overall_samples_cryptic), n, overall_samples_cryptic, gene))),      row_thing = glue::glue("{gene}_{contains_cryptic}")), "row_thing"),      -contains_cryptic), gene)))[[2]][[6]])
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |>
tibble::column_to_rownames("row_thing") |>
select(-contains_cryptic) |>
group_by(gene) |>
nest() |>
filter(map_lgl(data, ~nrow(.) == 2 & ncol(.) == 2))
mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |>
tibble::column_to_rownames("row_thing") |>
select(-contains_cryptic) |>
group_by(gene) |>
nest() |>
filter(map_lgl(data, ~nrow(.) == 2 & ncol(.) == 2)) |> View()
View((filter(nest(group_by(select(tibble::column_to_rownames(mutate(ungroup(unique(select(summarise(group_by(ungroup(mutate(group_by(mutate(mutation_clinical_data,      contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id),      contains_cryptic), overall_samples_cryptic = n_distinct(case_submitter_id))),      gene, contains_cryptic), n = n_distinct(case_submitter_id),      overall_samples_cryptic), n, overall_samples_cryptic, gene))),      row_thing = glue::glue("{gene}_{contains_cryptic}")), "row_thing"),      -contains_cryptic), gene)), map_lgl(data, ~nrow(.) == 2 &      ncol(.) == 2)))[[2]][[1]])
chisquare_tested_nested =
nested_thing |>
filter(gene %in% cosmic_cancer_genes$Gene)  |>
mutate(x_res = map(data, rstatix::chisq_test)) |>
unnest(x_res) |>
arrange(p) |> View()
nested_thing <- mutation_clinical_data |>
mutate(contains_cryptic = case_submitter_id %in% all_common_cases$case_submitter_id) |>
group_by(contains_cryptic) |>
mutate(overall_samples_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
group_by(gene,contains_cryptic) |>
summarise(n= n_distinct(case_submitter_id),overall_samples_cryptic) |>
select(n,overall_samples_cryptic,gene) |>
unique() |>
ungroup() |>
mutate(row_thing = glue::glue("{gene}_{contains_cryptic}")) |>
tibble::column_to_rownames("row_thing") |>
select(-contains_cryptic) |>
group_by(gene) |>
nest() |>
filter(map_lgl(data, ~nrow(.) == 2 & ncol(.) == 2))
chisquare_tested_nested =
nested_thing |>
filter(gene %in% cosmic_cancer_genes$Gene)  |>
mutate(x_res = map(data, rstatix::chisq_test)) |>
unnest(x_res) |>
arrange(p) |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  %>%
replace(is.na(.), 0)  |>
filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
filter(grepl('proportion',variable)) |>
ggplot(aes(x = gene,
y = value,
fill = variable)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
View(gene_mutation_proportions)
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  %>%
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
filter(grepl('proportion',variable)) |>
ggplot(aes(x = gene,
y = value,
fill = variable)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  %>%
replace(is.na(.), 0)  |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  %>%
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> print()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene')
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene')
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
as.data.table() |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene')
gene_mutation_proportions <- as.data.table(gene_mutation_proportions)
install.packages("data.table")
install.packages("data.table")
library(data.table)
library(data.table)
gene_mutation_proportions <- as.data.table(gene_mutation_proportions)
common_cases_mutation_proportions <- as.data.table(common_cases_mutation_proportions)
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene')
library(ggplot2)
library(tidyr)
library(ggpubr)
library(dplyr)
library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(clipr)
library(clipr)
library(naniar)
library(knitr)
library(snapcount)
library(ggsignif)
library(TCGAbiolinks)
library(stringr)
library(rstatix)
library(data.table)
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene')
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |> View()
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
filter(grepl('proportion',variable)) |>
ggplot(aes(x = gene,
y = value,
fill = variable)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
filter(grepl('proportion',variable)) |>
ggplot(aes(x = gene,
y = value,
fill = variable)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
filter(grepl('proportion',variable)) |>
ggplot(aes(x = gene,
y = value,
fill = variable)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
gene_mutation_proportions |>
left_join(common_cases_mutation_proportions, by="gene")  |>
#replace(is.na(.), 0)  |>
mutate(across(everything(), ~na_if(., NA))) |>
#filter(gene %in% sig_genes) |>
data.table::melt(id.vars = 'gene') |>
filter(grepl('proportion',variable)) |>
ggplot(aes(x = gene,
y = value,
fill = variable)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent_format())
