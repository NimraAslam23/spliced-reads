labs(
x = "Survival months with disease"
)
# same survival - cryptic vs non-cryptic (all cancers combined)
# number of STMN2 detected and non in each cancer type --------------------
STMN2_n_detected_non_cancer_abbrev <- survival_STMN2_cryptic |>
group_by(cancer_abbrev, stmn2_cryptic_detected) |>
summarise(count = n()) |>
ungroup() |>
pivot_wider(
names_from = stmn2_cryptic_detected,
values_from = count
) |>
rename("stmn2_cryptic_true" = "TRUE") |>
rename("stmn2_cryptic_false" = "FALSE")
# PCPG has 130 false, 51 true
# GBM has 154 false, 11 true
# boxplot aneuploidy score cancer-by-cancer in cryptic vs none ------------
aneuploidy_STMN2 <- cBio_clinical |>
left_join(STMN2_clinical_jir,by = c("case_submitter_id")) |>
janitor::clean_names() |>
rename("cancer_abbrev" = "cancer_abbrev_x") |>
select(case_submitter_id, study_id, cancer_abbrev, aneuploidy_score, cryptic_count, anno_count) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
unique() |>
mutate(aneuploidy_score = as.numeric(aneuploidy_score)) |>
filter(!is.na(aneuploidy_score) & aneuploidy_score != "NA") |>
mutate(stmn2_cryptic_detected = cryptic_count >= 2) |>
group_by(study_start) |>
mutate(n_total_samples = n_distinct(case_submitter_id)) |>
mutate(n_detected_stmn2 = sum(stmn2_cryptic_detected,na.rm = TRUE)) |>
ungroup() |>
filter(!is.na(stmn2_cryptic_detected)) |>
filter(n_detected_stmn2 > 2) |>
group_by(study_start) |>
mutate(wilcox_result = if (length(unique(stmn2_cryptic_detected)) < 2) {NA}
else {
list(broom::tidy(wilcox.test(aneuploidy_score ~ stmn2_cryptic_detected, exact = FALSE)))
}) |>
ungroup() |>
unnest(wilcox_result)
aneuploidy_STMN2 |>
ggplot(aes(x = stmn2_cryptic_detected,
y = aneuploidy_score)) +
geom_boxplot(aes(fill = stmn2_cryptic_detected)) +
labs(x = "Cancer Type",
y = "Aneuploidy Score") +
facet_wrap(~study_start) +
stat_compare_means(comparisons = list(c("TRUE", "FALSE")), label = "p.format") +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.25))) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = "Cryptic STMN2 detected")) +
theme(
axis.title.x = element_text(size = 12, face = "bold"),
axis.title.y = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10, face = "bold"),
strip.background = element_rect(fill = "lightgray"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12)
)
}
dev.off()
View(survival_STMN2_cryptic)
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev) |>
mutate(sample_size = sum(stmn2_cryptic_detected == TRUE, na.rm = TRUE))
View(x)
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev, stmn2_cryptic_detected) |>
mutate(sample_size = sum(stmn2_cryptic_detected, na.rm = TRUE))
x |> ggplot(x = stmn2_cryptic_detected) + geom_bar() + facet_wrap(~cancer_abbrev)
x |> ggplot(x = stmn2_cryptic_detected) + geom_bar(stat = "identity") + facet_wrap(~cancer_abbrev)
x |>
distinct() |>
drop_na() |>
ggplot(aes(x = stmn2_cryptic_detected) +
geom_bar(aes(fill = stmn2_cryptic_detected)) +
facet_wrap(~cancer_abbrev)
STMN2_clinical_jir |>
x |> distinct() |> drop_na() |>
ggplot(aes(x = stmn2_cryptic_detected)) +
geom_bar(aes(fill = stmn2_cryptic_detected)) +
facet_wrap(~cancer_abbrev)
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev, stmn2_cryptic_detected) |>
mutate(sample_size = sum(stmn2_cryptic_detected, na.rm = TRUE))
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev, stmn2_cryptic_detected) |>
mutate(sample_size = sum(stmn2_cryptic_detected, na.rm = TRUE)) |>
select(case_submitter_id, study_id, cancer_abbrev, stmn2_cryptic_detected, n_detected_stmn2, sample_size)
x <- survival_STMN2_cryptic |>
group_by(c(cancer_abbrev, stmn2_cryptic_detected)) |>
mutate(sample_size = sum(stmn2_cryptic_detected, na.rm = TRUE)) |>
select(case_submitter_id, study_id, cancer_abbrev, stmn2_cryptic_detected, n_detected_stmn2, sample_size)
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev) |>
group_by(stmn2_cryptic_detected) |>
mutate(sample_size = sum(stmn2_cryptic_detected, na.rm = TRUE)) |>
select(case_submitter_id, study_id, cancer_abbrev, stmn2_cryptic_detected, n_detected_stmn2, sample_size)
head(x)
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev) |>
mutate(sample_size = n(),
cryptic_events = sum(stmn2_cryptic_detected)) |>
ungroup()
x <- survival_STMN2_cryptic |>
group_by(cancer_abbrev) |>
mutate(sample_size = n(),
cryptic_events = sum(stmn2_cryptic_detected, na.rm=TRUE),
no_cryptic_events = sum(!stmn2_cryptic_detected, na.rm=TRUE)) |>
ungroup()
cBio_all_clinical_orig <- read.csv("cBio_clinical_data.tsv", sep = "\t", header = TRUE, na.strings = "", fill = TRUE)
cBio_clinical <- cBio_all_clinical_orig
cBio_clinical <- cBio_clinical |>
select(Study.ID, Patient.ID, Sample.ID, Aneuploidy.Score, Cancer.Type, TCGA.PanCanAtlas.Cancer.Type.Acronym, Cancer.Type.Detailed,
Months.of.disease.specific.survival, Mutation.Count, Overall.Survival..Months., Disease.specific.Survival.status)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(repurrrsive)
library(jsonlite)
library(clipr)
library(naniar)
library(ggpubr)
library(rstatix)
library(ggplot2)
library(tidyr)
library(dplyr)
library(knitr)
library(snapcount)
library(ggsignif)
library(TCGAbiolinks)
library(ggsurvfit)
library(survival)
library(survminer)
library(data.table)
# Chunk 2: functions
count_query <- function(gene_name, snapcount_coords, strand_code) {
cryptic_query <-  QueryBuilder(compilation = 'tcga',regions = snapcount_coords)
if(strand_code == "+"){
cryptic_query <- set_row_filters(cryptic_query, strand == "+")
}else if(strand_code == "-"){
cryptic_query <- set_row_filters(cryptic_query, strand == "-")
}
cryptic_query_exact <- set_coordinate_modifier(cryptic_query, Coordinates$Exact)
print("junction querying beginning")
juncs_on <- query_jx(cryptic_query)
juncs_on_flat <- query_jx(cryptic_query,return_rse = FALSE)
samples_with <- juncs_on@colData |>
as.data.frame()
print("junction querying done")
samples_with <- samples_with |>
select(c("rail_id",
"gdc_cases.demographic.gender",
"gdc_cases.submitter_id",
"gdc_cases.project.name",
"gdc_cases.project.primary_site",
"gdc_cases.diagnoses.tumor_stage",
"gdc_cases.samples.sample_type",
"cgc_case_primary_site",
"junction_coverage",
"junction_avg_coverage"))
juncs_on_flat <- juncs_on_flat |>
select(chromosome,start,end,strand,samples) |>
separate_rows(samples, sep = ',') |>
filter(samples != "") |>
separate(samples, into = c("rail_id","count")) |>
mutate(rail_id = as.integer(rail_id)) |>
mutate(count = as.numeric(count))
gene_df <- juncs_on_flat |>
left_join(samples_with) |>
filter(end == str_split(snapcount_coords,'-',simplify = TRUE)[[2]]) |>
filter(start == str_split(str_split(snapcount_coords,'-',simplify = TRUE)[[1]],":",simplify = TRUE)[[2]])
return(gene_df)
}
# query cryptic + anno and join into one df -------------------------------
combine_two_junctions <- function(gene_name, snapcount_coords_cryptic,
snapcount_coords_annotated, strand_code) {
cryptic_query <- count_query(gene_name, snapcount_coords_cryptic, strand_code) |>
rename("cryptic_count" = "count") |>
select(gdc_cases.submitter_id, cryptic_count)
anno_query <- count_query(gene_name, snapcount_coords_annotated, strand_code) |>
rename("anno_count" = "count")
query <- anno_query |>
left_join(cryptic_query, by = "gdc_cases.submitter_id") |>
mutate(jir = cryptic_count/(anno_count + cryptic_count)) |>
relocate(cryptic_count, .after = anno_count) |>
relocate(jir, .after = cryptic_count) |>
mutate(gene_name = gene_name) |>
mutate(coords_cryptic = snapcount_coords_cryptic)
return(query)
}
# add rpm column ----------------------------------------------------------
add_rpm_column <- function(clinical_jir_cryptic_df) {
clinical_jir_cryptic_df |>
mutate(rpm = (cryptic_count/junction_coverage)*1000000)
return(clinical_jir_cryptic_df)
}
two_junc <- read.csv("two_junc.csv", sep = ",")
two_junc <- two_junc |>
add_row(excl = "chr8:79611215-79636801", strand = "+", incl = "chr8:79611215-79616821", annot.strand = "+", annot.gene_id = "STMN2") |>
add_row(excl = "chr11:128988126-128998318", strand = "-", incl = "chr11:128992047-128998318", annot.strand = "-", annot.gene_id = "ARHGAP32") |>
add_row(excl = "chr6:158017291-158028755", strand = "+", incl = "chr6:158017291-158019983", annot.strand = "+", annot.gene_id = "SYNJ2")
cBio_all_clinical_orig <- read.csv("cBio_clinical_data.tsv", sep = "\t", header = TRUE, na.strings = "", fill = TRUE)
cBio_clinical <- cBio_all_clinical_orig
cBio_clinical <- cBio_clinical |>
select(Study.ID, Patient.ID, Sample.ID, Aneuploidy.Score, Cancer.Type, TCGA.PanCanAtlas.Cancer.Type.Acronym, Cancer.Type.Detailed,
Months.of.disease.specific.survival, Mutation.Count, Overall.Survival..Months., Disease.specific.Survival.status)
cBio_clinical <- cBio_clinical |>
rename("case_submitter_id" = "Patient.ID") |>
rename("cancer" = "Cancer.Type.Detailed") |>
rename("cancer_abbrev" = "TCGA.PanCanAtlas.Cancer.Type.Acronym")
tcga_cryptics_metatable <- read.table("tcga_cryptics_metatable.txt", sep=",")
# cryptic and non-cryptic sample sizes
cryptic_true_false_counts <- tcga_cryptics_metatable |>
janitor::clean_names() |>
select(-c(rail_id, gdc_cases_diagnoses_tumor_stage, gdc_cases_samples_sample_type, cgc_case_primary_site)) |>
rename("case_submitter_id" = "gdc_cases_submitter_id") |>
left_join(cBio_clinical, by = "case_submitter_id") |>
janitor::clean_names() |>
mutate(cryptic_detected = cryptic_count >= 2) |>
group_by(cancer_abbrev) |>
mutate(n_detected_cryptic = sum(cryptic_detected, na.rm = TRUE)) |>
ungroup() |>
filter(!is.na(cryptic_detected)) |>
filter(n_detected_cryptic > 2) |>
mutate(cryptic_detected = as.logical(cryptic_detected)) |>
distinct() |>
group_by(cancer_abbrev, cryptic_detected) |>
summarise(count = n()) |>
ungroup() |>
pivot_wider(
names_from = cryptic_detected,
values_from = count
) |>
rename("cryptic_true" = "TRUE") |>
rename("cryptic_false" = "FALSE")
tcga_cryptics_metatable <- tcga_cryptics_metatable |>
janitor::clean_names() |>
select(-c(rail_id, gdc_cases_diagnoses_tumor_stage, gdc_cases_samples_sample_type, cgc_case_primary_site)) |>
rename("case_submitter_id" = "gdc_cases_submitter_id") |>
left_join(cBio_clinical, by = "case_submitter_id") |>
janitor::clean_names() |>
mutate(mutation_count = as.numeric(mutation_count)) |>
filter(!is.na(mutation_count) & mutation_count != "NA") |>
mutate(cryptic_detected = cryptic_count >= 2) |>
group_by(cancer_abbrev) |>
mutate(n_detected_cryptic = sum(cryptic_detected, na.rm = TRUE)) |>
ungroup() |>
filter(!is.na(cryptic_detected)) |>
filter(n_detected_cryptic > 2) |>
mutate(cryptic_detected = as.logical(cryptic_detected))
# cancer sample sizes
cancer_sample_sizes <- tcga_cryptics_metatable |>
group_by(cancer_abbrev) |>
summarise(count = n()) |>
ungroup()
tcga_cryptics_metatable <- tcga_cryptics_metatable |>
left_join(cancer_sample_sizes, by="cancer_abbrev") |>
rename("cancer_sample_size" = "count") |>
left_join(cryptic_true_false_counts, by="cancer_abbrev")
tcga_cryptics_metatable |>
filter(cryptic_count > 2) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
drop_na(study_start) |>
ggplot(aes(x = fct_rev(fct_infreq(study_start)))) +
geom_bar(aes(fill = study_start)) +
coord_flip() +
facet_wrap(~gene_name) +
labs(
x = "Cancer Type",
y = "Number of Cases"
)
tcga_cryptics_metatable |>
add_rpm_column() |>
filter(cryptic_count > 2) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
drop_na(study_start) |>
ggplot(aes(x = rpm,
y = fct_reorder(study_start, rpm, median))) +
geom_boxplot(aes(fill = study_start)) +
facet_wrap(~gene_name, nrow = 7) +
labs(
x = "Cryptic Coverage (reads per million)",
y = "Primary Site of Cancer"
)
tcga_cryptics_metatable |>
add_rpm_column()
tcga_cryptics_metatable |>
add_rpm_column() |> View()
return(df)
add_rpm_column <- function(df) {
df |>
mutate(rpm = (cryptic_count/junction_coverage)*1000000)
return(df)
}
tcga_cryptics_metatable |>
add_rpm_column() |>
filter(cryptic_count > 2) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
drop_na(study_start) |>
ggplot(aes(x = rpm,
y = fct_reorder(study_start, rpm, median))) +
geom_boxplot(aes(fill = study_start)) +
facet_wrap(~gene_name, nrow = 7) +
labs(
x = "Cryptic Coverage (reads per million)",
y = "Primary Site of Cancer"
)
tcga_cryptics_metatable |>
add_rpm_column() |>
filter(cryptic_count > 2) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
drop_na(study_start) |>
ggplot(aes(x = rpm,
y = fct_reorder(study_start, rpm, median))) +
geom_boxplot(aes(fill = study_start)) +
facet_wrap(~gene_name, nrow = 7) +
labs(
x = "Cryptic Coverage (reads per million)",
y = "Primary Site of Cancer"
)
tcga_cryptics_metatable |>
add_rpm_column()
add_rpm_column <- function(df) {
df |>
mutate(rpm = (cryptic_count/junction_coverage)*1000000)
return(df)
}
tcga_cryptics_metatable |>
add_rpm_column() |>
filter(cryptic_count > 2) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
drop_na(study_start) |>
ggplot(aes(x = rpm,
y = fct_reorder(study_start, rpm, median))) +
geom_boxplot(aes(fill = study_start)) +
facet_wrap(~gene_name, nrow = 7) +
labs(
x = "Cryptic Coverage (reads per million)",
y = "Primary Site of Cancer"
)
tcga_cryptics_metatable |>
add_rpm_column() |> View()
tcga_cryptics_metatable$rpm
tcga_cryptics_metatable |>
mutate(rpm = (cryptic_count/junction_coverage)*1000000) |>
filter(cryptic_count > 2) |>
separate(study_id,into = ('study_start'),remove = FALSE) |>
drop_na(study_start) |>
ggplot(aes(x = rpm,
y = fct_reorder(study_start, rpm, median))) +
geom_boxplot(aes(fill = study_start)) +
facet_wrap(~gene_name, nrow = 7) +
labs(
x = "Cryptic Coverage (reads per million)",
y = "Primary Site of Cancer"
)
glue::glue("{event} - is the junction")
print((glue::glue("{event}")))
event = 'hi'
print((glue::glue("{event}")))
glue::glue("{event} - is the junction")
View(cryptic_plots)
View(cryptic_true_false_counts)
cryptic_tables <- list()
for(event in cryptic_events) {
cryptic_tables[[event]] <- tcga_cryptics_metatable |>
filter(coords_cryptic == event) |>
filter(cryptic_count >= 2) |>
drop_na(cancer_abbrev) |>
janitor::tabyl(cancer_abbrev) |>
arrange(desc(percent))
kable((cryptic_tables[[event]]), caption = "Mutational burden of cryptic events")
}
cryptic_events <- unique(tcga_cryptics_metatable$coords_cryptic)
cryptic_tables <- list()
for(event in cryptic_events) {
cryptic_tables[[event]] <- tcga_cryptics_metatable |>
filter(coords_cryptic == event) |>
filter(cryptic_count >= 2) |>
drop_na(cancer_abbrev) |>
janitor::tabyl(cancer_abbrev) |>
arrange(desc(percent))
kable((cryptic_tables[[event]]), caption = "Mutational burden of cryptic events")
}
View(cryptic_tables)
cryptic_tables$`chr7:44258611-44258871`
p <- cryptic_tables$`chr7:44258611-44258871`
print(p)
pdf("~/Desktop/test.pdf")
print(p)
dev.off()
graphics.off()
dev.off()
dev.off()
dev.off()
print(p)
cryptic_tables <- tibble::tibble()
cBio_all_clinical_orig <- read.csv("cBio_clinical_data.tsv", sep = "\t", header = TRUE, na.strings = "", fill = TRUE)
cBio_clinical <- cBio_all_clinical_orig
cBio_clinical <- cBio_clinical |>
select(Study.ID, Patient.ID, Sample.ID, Aneuploidy.Score, Cancer.Type, TCGA.PanCanAtlas.Cancer.Type.Acronym, Cancer.Type.Detailed,
Months.of.disease.specific.survival, Mutation.Count, Overall.Survival..Months., Disease.specific.Survival.status)
cBio_clinical <- cBio_clinical |>
rename("case_submitter_id" = "Patient.ID") |>
rename("cancer" = "Cancer.Type.Detailed") |>
rename("cancer_abbrev" = "TCGA.PanCanAtlas.Cancer.Type.Acronym")
tcga_cryptics_metatable <- read.table("tcga_cryptics_metatable.txt", sep=",")
# cryptic and non-cryptic sample sizes
cryptic_true_false_counts <- tcga_cryptics_metatable |>
janitor::clean_names() |>
select(-c(rail_id, gdc_cases_diagnoses_tumor_stage, gdc_cases_samples_sample_type, cgc_case_primary_site)) |>
rename("case_submitter_id" = "gdc_cases_submitter_id") |>
left_join(cBio_clinical, by = "case_submitter_id") |>
janitor::clean_names() |>
mutate(cryptic_detected = cryptic_count >= 2) |>
group_by(cancer_abbrev) |>
mutate(n_detected_cryptic = sum(cryptic_detected, na.rm = TRUE)) |>
ungroup() |>
filter(!is.na(cryptic_detected)) |>
filter(n_detected_cryptic >= 2) |>
mutate(cryptic_detected = as.logical(cryptic_detected)) |>
distinct() |>
group_by(cancer_abbrev, cryptic_detected) |>
summarise(count = n()) |>
ungroup() |>
pivot_wider(
names_from = cryptic_detected,
values_from = count
) |>
rename("cryptic_true" = "TRUE") |>
rename("cryptic_false" = "FALSE")
tcga_cryptics_metatable <- tcga_cryptics_metatable |>
janitor::clean_names() |>
select(-c(rail_id, gdc_cases_diagnoses_tumor_stage, gdc_cases_samples_sample_type, cgc_case_primary_site)) |>
rename("case_submitter_id" = "gdc_cases_submitter_id") |>
left_join(cBio_clinical, by = "case_submitter_id") |>
janitor::clean_names() |>
mutate(mutation_count = as.numeric(mutation_count)) |>
filter(!is.na(mutation_count) & mutation_count != "NA") |>
mutate(cryptic_detected = cryptic_count >= 2) |>
group_by(cancer_abbrev) |>
mutate(n_detected_cryptic = sum(cryptic_detected, na.rm = TRUE)) |>
ungroup() |>
filter(!is.na(cryptic_detected)) |>
filter(n_detected_cryptic >= 2) |>
mutate(cryptic_detected = as.logical(cryptic_detected))
# cancer sample sizes
cancer_sample_sizes <- tcga_cryptics_metatable |>
group_by(cancer_abbrev) |>
summarise(count = n()) |>
ungroup()
tcga_cryptics_metatable <- tcga_cryptics_metatable |>
left_join(cancer_sample_sizes, by="cancer_abbrev") |>
rename("cancer_sample_size" = "count") |>
left_join(cryptic_true_false_counts, by="cancer_abbrev")
View(tcga_cryptics_metatable)
cBio_all_clinical_orig <- read.csv("cBio_clinical_data.tsv", sep = "\t", header = TRUE, na.strings = "", fill = TRUE)
cBio_clinical <- cBio_all_clinical_orig
cBio_clinical <- cBio_clinical |>
select(Study.ID, Patient.ID, Sample.ID, Aneuploidy.Score, Cancer.Type, TCGA.PanCanAtlas.Cancer.Type.Acronym, Cancer.Type.Detailed,
Months.of.disease.specific.survival, Mutation.Count, Overall.Survival..Months., Disease.specific.Survival.status)
cBio_clinical <- cBio_clinical |>
rename("case_submitter_id" = "Patient.ID") |>
rename("cancer" = "Cancer.Type.Detailed") |>
rename("cancer_abbrev" = "TCGA.PanCanAtlas.Cancer.Type.Acronym")
tcga_cryptics_metatable <- data.table::fread("tcga_cryptics_metatable.txt")
# cryptic and non-cryptic sample sizes
cryptic_true_false_counts <- tcga_cryptics_metatable |>
janitor::clean_names() |>
select(-c(rail_id, gdc_cases_diagnoses_tumor_stage, gdc_cases_samples_sample_type, cgc_case_primary_site)) |>
rename("case_submitter_id" = "gdc_cases_submitter_id") |>
left_join(cBio_clinical, by = "case_submitter_id") |>
janitor::clean_names() |>
mutate(cryptic_detected = cryptic_count >= 2) |>
filter(!is.na(cryptic_detected)) |>
unique() |>
group_by(coords_cryptic,cancer_abbrev,cryptic_detected ) |>
summarise(gene_name, n_detected_cryptic = n_distinct(case_submitter_id)) |>
ungroup() |>
unique() |>
filter(!is.na(cancer_abbrev)) |>
pivot_wider(
names_from = cryptic_detected,
values_from = n_detected_cryptic
) |>
rename("cryptic_true" = "TRUE") |>
rename("cryptic_false" = "FALSE") |>
mutate(across(where(~anyNA(.) & is.numeric(.)), ~replace_na(., 0)))
tcga_cryptics_metatable <- tcga_cryptics_metatable |>
janitor::clean_names() |>
select(-c(rail_id, gdc_cases_diagnoses_tumor_stage, gdc_cases_samples_sample_type, cgc_case_primary_site)) |>
rename("case_submitter_id" = "gdc_cases_submitter_id") |>
left_join(cBio_clinical, by = "case_submitter_id") |>
janitor::clean_names() |>
unique() |>
mutate(mutation_count = as.numeric(mutation_count)) |>
filter(!is.na(mutation_count) & mutation_count != "NA") |>
mutate(cryptic_detected = cryptic_count >= 2) |>
filter(!is.na(cryptic_detected)) |>
group_by(cancer_abbrev) |>
mutate(n_detected_cryptic = sum(cryptic_detected, na.rm = TRUE)) |>
mutate(cancer_sample_size = n_distinct(case_submitter_id)) |>
ungroup() |>
filter(!is.na(cryptic_detected)) |>
filter(n_detected_cryptic >= 2) |>
mutate(cryptic_detected = as.logical(cryptic_detected))
tcga_cryptics_metatable <- tcga_cryptics_metatable |>
left_join(cryptic_true_false_counts, by=c("cancer_abbrev", "coords_cryptic", "gene_name"))
