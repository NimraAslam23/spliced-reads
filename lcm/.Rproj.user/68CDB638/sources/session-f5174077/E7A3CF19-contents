library(tidyverse)
library(ggplot2)
library(tidyr)
library(dplyr)

# Data import -------------------------------------------------------------

spliced_reads_orig <- read.csv("spliced_read_from_lcm.csv")
spliced_reads <- spliced_reads_orig

# Looking at data ---------------------------------------------------------

spliced_reads |> 
  distinct(sample_name) #21 unique samples

spliced_reads |> 
  distinct(junction_name) #770 splice junctions

group_column <- spliced_reads |> 
  select(junction_name, sample_name, n_spliced_reads) |> 
  complete(junction_name, sample_name,fill=list(n_spliced_reads = 0)) |> 
  mutate(disease = ifelse(grepl("ALS", sample_name),
                          "ALS",
                          "control"))

# Density plot - number of spliced reads in ALS and controls --------------

group_column |> 
  ggplot(aes(x = n_spliced_reads,
             fill = disease)) +
  stat_density() + 
  scale_x_continuous(trans = scales::pseudo_log_trans()) +
  labs(
    title = "Number of spliced reads in ALS and controls",
    x = "Number of spliced reads",
    color = "Group",
  )

# Table of the average count of each junction in each disease -------------

mean_per_junction <- group_column |> 
  group_by(junction_name,disease) |> 
  mutate(mean_n_spliced_reads = mean(n_spliced_reads)) |> 
  ungroup() |> 
  select(junction_name,disease,mean_n_spliced_reads) |> 
  unique() |> #mean_n_spliced_reads for each junction_name separately for control and ALS
  pivot_wider(names_from = 'disease',
              values_from = 'mean_n_spliced_reads')

# Nest data by junction_name ----------------------------------------------

group_column_nested <- group_column |> 
  group_by(junction_name) |> 
  nest()

# Run wilcoxon test on all the nested data --------------------------------

wilcox_tested_nested = group_column_nested |> 
  mutate(wc_res = map(data,~{broom::tidy(wilcox.test(.x$n_spliced_reads ~ .x$disease, exact=FALSE))})) |> 
  unnest(wc_res) |> 
  arrange(p.value)

# Find the junctions which were significant (p < 0.05) --------------------

significant_junctions <- wilcox_tested_nested |> 
  filter(p.value < 0.05) # 33 significant junctions

# Fraction of significant junctions expressed more in ALS and cont --------

mean_per_junction_sig <- mean_per_junction |> 
  semi_join(significant_junctions, by=("junction_name")) |> 
  mutate(higher_value = ifelse(ALS>control, "ALS", "control")) |> 
  janitor::tabyl(higher_value)

# Number of significant spliced reads in ALS and controls -----------------

sig_reads_groups <- group_column |> 
  semi_join(significant_junctions, by=("junction_name")) 

ggplot(sig_reads_groups, aes(x = n_spliced_reads, color = disease, fill = disease)) +
  geom_density(alpha = 0.5) +
  scale_x_continuous(trans = scales::pseudo_log_trans()) +
  labs(
    title = "Number of significant spliced reads in ALS and controls",
    x = "Number of spliced reads",
  )

# Junctions higher in the controls vs ALS ---------------------------------

mean_per_junction |> 
  semi_join(significant_junctions, by=("junction_name")) |> 
  mutate(higher_value = ifelse(ALS>control,"ALS","control")) |> 
  separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |>
  janitor::tabyl(junc_cat,higher_value)

mean_per_junction |> 
  semi_join(significant_junctions, by=("junction_name")) |> 
  mutate(higher_value = ifelse(ALS>control,"ALS","control")) |> 
  separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |> 
  ggplot(aes(x = junc_cat, fill = higher_value)) +
  geom_bar(position = "dodge") +
  labs(
    title = "Number of junctions significantly higher in ALS and controls",
    x = "Junction category",
    y = "Number of junctions",
    color = "Group",
  )

# Mean 'n_datasets_junction_found' by which tissue it was higher in -------

mean_per_junction |> 
  semi_join(significant_junctions, by=("junction_name")) |> 
  mutate(higher_value = ifelse(ALS>control,"ALS","control")) |> group_by(higher_value) |> 
  separate(junction_name, sep = '\\|',into = c("gene","junc_cat","n_datasets_junction_found"),convert = TRUE) |> 
  summarize(mean_n_datasets = mean(n_datasets_junction_found))

# Left-join ptdp table to existing table ----------------------------------

ptdp_orig <- read.csv("ptdp_mn_death.csv")

spliced_reads$sample_name <- gsub(".SJ.out", "", as.character(spliced_reads$sample_name))

ptdp_orig <- ptdp_orig |> 
  rename("sample_name" = "sample")

spliced_reads_pdtp <- spliced_reads |> 
  left_join(ptdp_orig, by = "sample_name")

# Plot STMN2 expression against MN ----------------------------------------

spliced_reads_pdtp_select <- spliced_reads_pdtp |> 
  select(sample_name, n_spliced_reads, junction_name, pTDP.43, MN_death, pTDP_category)

spliced_reads_pdtp_select |> 
  filter(grepl("STMN2", junction_name)) |> 
  drop_na() |> 
  ggplot(aes(x = pTDP_category, y = n_spliced_reads)) +
  geom_boxplot() +
  theme(legend.position = "none") +
  labs(
    title = "STMN2 expression is higher with less phosphorylated TDP-43", 
    x = "pTDP-43 accumulation",
    y = "Number of STMN2 spliced reads") 

spliced_reads_pdtp_select |> 
  filter(grepl("STMN2", junction_name)) |> 
  drop_na() |> 
  ggplot(aes(x = pTDP_category, y = MN_death)) +
  geom_boxplot() +
  theme(legend.position = "none") +
  labs(
    title = "pTDP-43 levels do not affect viability of motor neurons", 
    x = "pTDP-43 accumulation",
    y = "Motor neuron death (%)") 

# stmn2_all_junctions.bed -------------------------------------------------

stmn2_all_junctions_orig <- read_tsv("stmn2_all_junctions.bed",
                                     col_names = c("chrosome", "start", "end", "sample_name", 
                                                   "n_spliced_reads", "strand"))
stmn2_all_junctions <- unique(stmn2_all_junctions_orig)
stmn2_all_junctions$sample_name <- gsub(".SJ.out", "", as.character(stmn2_all_junctions$sample_name))

spliced_reads_pdtp_stmn2 <- stmn2_all_junctions |> 
  left_join(ptdp_orig, by=c("sample_name"))

spliced_reads_pdtp_select |> 
  filter(grepl("STMN2", junction_name))

stmn2_all_junctions |> 
  distinct(end)
  # cryptic 79616822, annotated 79636802

spliced_reads_pdtp_stmn2 <- spliced_reads_pdtp_stmn2 |> 
  mutate(junction = ifelse(end == "79616822",
                           "cryptic",
                           "annotated")) |> 
  mutate(disease = ifelse(grepl("ALS", sample_name),
                                "ALS",
                                "control")) |> 
  relocate(disease, .after = sample_name) |> 
  relocate(junction, .after = disease)

spliced_reads_pdtp_stmn2 |> 
  ggplot(aes(x = junction, y = n_spliced_reads, fill = disease)) +
  geom_boxplot() +
  labs(
    title = "Annotated STMN2 event has higher expression in the control samples",
    y = "Number of spliced reads"
  )

spliced_reads_pdtp_stmn2 |> 
  drop_na() |> 
  ggplot(aes(x = junction, y = n_spliced_reads, fill = pTDP_category)) +
  geom_boxplot() +
  labs(
    title = "Higher expression of annotated STMN2 event with low levels of pTDP",
    x = "Junction",
    y = "Number of spliced reads"
  )

spliced_reads_pdtp_stmn2 |> 
  drop_na() |> 
  ggplot(aes(x = MN_death, y = n_spliced_reads)) +
  geom_point(aes(color = junction)) +
  labs(
    x = "Motor neuron death (%)",
    y = "Number of spliced reads",
    color = "Junction"
  ) +
  ggpubr::stat_cor() +
  geom_smooth(method = 'lm') +
  ggtitle('There is no relationship between MN death and N spliced reads of either STMN2 event')

# percent spliced in (psi) value ------------------------------------------

psi_stmn2 <- spliced_reads_pdtp_stmn2 |> 
  select(-chrosome,-start,-end) |> 
  unique() |>
  pivot_wider(names_from = 'junction',
              values_from = 'n_spliced_reads',
              values_fill = 0) 

psi_stmn2 <- psi_stmn2 |> 
  # group_by(sample_name) |> 
  mutate(total_counts = annotated + cryptic) |> 
  mutate(psi = cryptic / total_counts)

psi_stmn2 |> 
  drop_na() |> 
  ggplot(aes(x = pTDP_category, y = psi, fill = pTDP_category)) +
  geom_boxplot() +
  theme(legend.position = "none") +
  labs(
    title = "STMN2 cryptic splicing is higher with low levels of pTDP",
    x = "pTDP-43 accumulation",
    y = "PSI value"
  )

psi_stmn2 |> 
  drop_na() |> 
  ggplot(aes(x = MN_death, y = psi)) +
  geom_point(aes(color = pTDP_category)) +
  labs(
    x = "Motor neuron death (%)",
    y = "PSI value",
    color = "pTDP-43 \naccumulation"
  ) +
  ggpubr::stat_cor() +
  geom_smooth(method = 'lm') +
  ggtitle('There is a negative relationship between cryptic STMN2 PSI and MN death - more death is less cryptic expressed')




